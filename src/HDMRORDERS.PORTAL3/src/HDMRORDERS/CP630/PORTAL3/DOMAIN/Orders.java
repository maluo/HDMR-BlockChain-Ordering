package HDMRORDERS.CP630.PORTAL3.DOMAIN;

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.hibernate.annotations.CreationTimestamp;
import org.hibernate.annotations.UpdateTimestamp;

/**
 * Orders generated by hbm2java
 */
@Entity
@Table(name = "orders", catalog = "db_orders")
public class Orders implements java.io.Serializable {

	private Integer id;
	private Items items;
	private String orderNum;
	private Float unitPrice;
	private Integer quantity;
	private Float balance;
	private Float shipping;
	private Float salesPrice;
	private Float subtotal;
	private Float grossIncome;
	private Date transactionDate;
	private Date sysDate;

	public Orders() {
	}

	public Orders(Date transactionDate, Date sysDate) {
		this.transactionDate = transactionDate;
		this.sysDate = sysDate;
	}
	
	public Orders(String orderNum, Float unitPrice, Integer quantity, Float balance, Float shipping,
			Float salesPrice, Float subtotal, Float grossIncome) {
		this.orderNum = orderNum;
		this.unitPrice = unitPrice;
		this.quantity = quantity;
		this.balance = balance;
		this.shipping = shipping;
		this.salesPrice = salesPrice;
		this.subtotal = subtotal;
		this.grossIncome = grossIncome;
		this.transactionDate = transactionDate;
		this.sysDate = sysDate;
	}
	
	public Orders(String orderNum, Float unitPrice, Integer quantity, Float balance, Float shipping,
			Float salesPrice, Float subtotal, Float grossIncome, Date transactionDate) {
		this.orderNum = orderNum;
		this.unitPrice = unitPrice;
		this.quantity = quantity;
		this.balance = balance;
		this.shipping = shipping;
		this.salesPrice = salesPrice;
		this.subtotal = subtotal;
		this.grossIncome = grossIncome;
		this.transactionDate = transactionDate;
	}

	public Orders(Items items, String orderNum, Float unitPrice, Integer quantity, Float balance, Float shipping,
			Float salesPrice, Float subtotal, Float grossIncome, Date transactionDate, Date sysDate) {
		this.items = items;
		this.orderNum = orderNum;
		this.unitPrice = unitPrice;
		this.quantity = quantity;
		this.balance = balance;
		this.shipping = shipping;
		this.salesPrice = salesPrice;
		this.subtotal = subtotal;
		this.grossIncome = grossIncome;
		this.transactionDate = transactionDate;
		this.sysDate = sysDate;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "item_num")
	public Items getItems() {
		return this.items;
	}

	public void setItems(Items items) {
		this.items = items;
	}

	@Column(name = "order_num")
	public String getOrderNum() {
		return this.orderNum;
	}

	public void setOrderNum(String orderNum) {
		this.orderNum = orderNum;
	}

	@Column(name = "unit_price", precision = 12, scale = 0)
	public Float getUnitPrice() {
		return this.unitPrice;
	}

	public void setUnitPrice(Float unitPrice) {
		this.unitPrice = unitPrice;
	}

	@Column(name = "quantity")
	public Integer getQuantity() {
		return this.quantity;
	}

	public void setQuantity(Integer quantity) {
		this.quantity = quantity;
	}

	@Column(name = "balance", precision = 12, scale = 0)
	public Float getBalance() {
		return this.balance;
	}

	public void setBalance(Float balance) {
		this.balance = balance;
	}

	@Column(name = "shipping", precision = 12, scale = 0)
	public Float getShipping() {
		return this.shipping;
	}

	public void setShipping(Float shipping) {
		this.shipping = shipping;
	}

	@Column(name = "sales_price", precision = 12, scale = 0)
	public Float getSalesPrice() {
		return this.salesPrice;
	}

	public void setSalesPrice(Float salesPrice) {
		this.salesPrice = salesPrice;
	}

	@Column(name = "subtotal", precision = 12, scale = 0)
	public Float getSubtotal() {
		return this.subtotal;
	}

	public void setSubtotal(Float subtotal) {
		this.subtotal = subtotal;
	}

	@Column(name = "gross_income", precision = 12, scale = 0)
	public Float getGrossIncome() {
		return this.grossIncome;
	}

	public void setGrossIncome(Float grossIncome) {
		this.grossIncome = grossIncome;
	}

	@UpdateTimestamp
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "transaction_date", nullable = false, length = 19)
	public Date getTransactionDate() {
		return this.transactionDate;
	}

	public void setTransactionDate(Date transactionDate) {
		this.transactionDate = transactionDate;
	}
	
	@CreationTimestamp
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "sys_date", nullable = false, insertable=false, length = 19)
	public Date getSysDate() {
		return this.sysDate;
	}

	public void setSysDate(Date sysDate) {
		this.sysDate = sysDate;
	}

}

